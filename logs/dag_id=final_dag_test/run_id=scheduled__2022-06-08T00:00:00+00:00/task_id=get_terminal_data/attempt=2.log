[2022-07-25 12:55:57,250] {taskinstance.py:1179} INFO - Dependencies all met for <TaskInstance: final_dag_test.get_terminal_data scheduled__2022-06-08T00:00:00+00:00 [queued]>
[2022-07-25 12:55:57,380] {taskinstance.py:1179} INFO - Dependencies all met for <TaskInstance: final_dag_test.get_terminal_data scheduled__2022-06-08T00:00:00+00:00 [queued]>
[2022-07-25 12:55:57,384] {taskinstance.py:1376} INFO - 
--------------------------------------------------------------------------------
[2022-07-25 12:55:57,401] {taskinstance.py:1377} INFO - Starting attempt 2 of 2
[2022-07-25 12:55:57,403] {taskinstance.py:1378} INFO - 
--------------------------------------------------------------------------------
[2022-07-25 12:55:57,522] {taskinstance.py:1397} INFO - Executing <Task(PythonOperator): get_terminal_data> on 2022-06-08 00:00:00+00:00
[2022-07-25 12:55:57,567] {standard_task_runner.py:52} INFO - Started process 2070 to run task
[2022-07-25 12:55:57,602] {standard_task_runner.py:79} INFO - Running: ['***', 'tasks', 'run', 'final_dag_test', 'get_terminal_data', 'scheduled__2022-06-08T00:00:00+00:00', '--job-id', '227', '--raw', '--subdir', 'DAGS_FOLDER/final_dag.py', '--cfg-path', '/tmp/tmp1291196v', '--error-file', '/tmp/tmp45vk1hd5']
[2022-07-25 12:55:57,642] {standard_task_runner.py:80} INFO - Job 227: Subtask get_terminal_data
[2022-07-25 12:55:57,921] {logging_mixin.py:115} WARNING - /home/***/.local/lib/python3.7/site-packages/***/configuration.py:528 DeprecationWarning: The sql_alchemy_conn option in [core] has been moved to the sql_alchemy_conn option in [database] - the old setting has been used, but please update your config.
[2022-07-25 12:55:58,764] {task_command.py:371} INFO - Running <TaskInstance: final_dag_test.get_terminal_data scheduled__2022-06-08T00:00:00+00:00 [running]> on host 929e6a3728d4
[2022-07-25 12:56:00,101] {taskinstance.py:1591} INFO - Exporting the following env vars:
AIRFLOW_CTX_DAG_EMAIL=caroline.kosalka@gmail.com
AIRFLOW_CTX_DAG_OWNER=***
AIRFLOW_CTX_DAG_ID=final_dag_test
AIRFLOW_CTX_TASK_ID=get_terminal_data
AIRFLOW_CTX_EXECUTION_DATE=2022-06-08T00:00:00+00:00
AIRFLOW_CTX_TRY_NUMBER=2
AIRFLOW_CTX_DAG_RUN_ID=scheduled__2022-06-08T00:00:00+00:00
[2022-07-25 12:56:00,316] {base.py:68} INFO - Using connection ID 'postgres_***' for task execution.
[2022-07-25 12:56:00,386] {python.py:173} INFO - Done. Returned value was: [(1, datetime.datetime(2021, 5, 4, 4, 20), 42.0), (1, datetime.datetime(2022, 7, 25, 12, 16, 53, 14492), 9000.0), (1, datetime.datetime(2022, 7, 25, 12, 16, 53, 16618), 0.0), (2, datetime.datetime(2022, 7, 25, 12, 16, 53, 17798), -1.0), (33, datetime.datetime(2022, 6, 3, 3, 33, 33), 3333.0), (33, datetime.datetime(2022, 6, 3, 3, 33, 33), 3333.0), (33, datetime.datetime(2022, 6, 3, 3, 33, 33), 3333.0), (33, datetime.datetime(2022, 6, 3, 3, 33, 33), 3333.0), (33, datetime.datetime(2022, 6, 3, 3, 33, 33), 3333.0), (33, datetime.datetime(2022, 6, 3, 3, 33, 33), 3333.0), (33, datetime.datetime(2022, 6, 3, 3, 33, 33), 3333.0), (33, datetime.datetime(2022, 6, 3, 3, 33, 33), 3333.0), (33, datetime.datetime(2022, 6, 3, 3, 33, 33), 3333.0), (33, datetime.datetime(2022, 6, 3, 3, 33, 33), 3333.0), (33, datetime.datetime(2022, 6, 3, 3, 33, 33), 3333.0), (33, datetime.datetime(2022, 6, 3, 3, 33, 33), 3333.0), (33, datetime.datetime(2022, 6, 3, 3, 33, 33), 3333.0), (33, datetime.datetime(2022, 6, 3, 3, 33, 33), 3333.0), (33, datetime.datetime(2022, 6, 3, 3, 33, 33), 3333.0), (33, datetime.datetime(2022, 6, 3, 3, 33, 33), 3333.0), (33, datetime.datetime(2022, 6, 3, 3, 33, 33), 3333.0), (33, datetime.datetime(2022, 6, 3, 3, 33, 33), 3333.0), (33, datetime.datetime(2022, 6, 3, 3, 33, 33), 3333.0), (33, datetime.datetime(2022, 6, 3, 3, 33, 33), 3333.0), (33, datetime.datetime(2022, 6, 3, 3, 33, 33), 3333.0), (33, datetime.datetime(2022, 6, 3, 3, 33, 33), 3333.0), (33, datetime.datetime(2022, 6, 3, 3, 33, 33), 3333.0), (33, datetime.datetime(2022, 6, 3, 3, 33, 33), 3333.0), (33, datetime.datetime(2022, 6, 3, 3, 33, 33), 3333.0), (33, datetime.datetime(2022, 6, 3, 3, 33, 33), 3333.0), (33, datetime.datetime(2022, 6, 3, 3, 33, 33), 3333.0), (33, datetime.datetime(2022, 6, 3, 3, 33, 33), 3333.0), (33, datetime.datetime(2022, 6, 3, 3, 33, 33), 3333.0), (33, datetime.datetime(2022, 6, 3, 3, 33, 33), 3333.0), (33, datetime.datetime(2022, 6, 3, 3, 33, 33), 3333.0), (33, datetime.datetime(2022, 6, 3, 3, 33, 33), 3333.0), (33, datetime.datetime(2022, 6, 3, 3, 33, 33), 3333.0), (33, datetime.datetime(2022, 6, 3, 3, 33, 33), 3333.0), (33, datetime.datetime(2022, 6, 3, 3, 33, 33), 3333.0), (33, datetime.datetime(2022, 6, 3, 3, 33, 33), 3333.0)]
[2022-07-25 12:56:00,490] {xcom.py:586} ERROR - Could not serialize the XCom value into JSON. If you are using pickle instead of JSON for XCom, then you need to enable pickle support for XCom in your *** config.
[2022-07-25 12:56:00,496] {taskinstance.py:1909} ERROR - Task failed with exception
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 68, in wrapper
    return func(*args, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 2412, in xcom_push
    session=session,
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 68, in wrapper
    return func(*args, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/xcom.py", line 198, in set
    map_index=map_index,
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/xcom.py", line 583, in serialize_value
    return json.dumps(value).encode('UTF-8')
  File "/usr/local/lib/python3.7/json/__init__.py", line 231, in dumps
    return _default_encoder.encode(obj)
  File "/usr/local/lib/python3.7/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/usr/local/lib/python3.7/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "/usr/local/lib/python3.7/json/encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type datetime is not JSON serializable
[2022-07-25 12:56:00,548] {taskinstance.py:1420} INFO - Marking task as FAILED. dag_id=final_dag_test, task_id=get_***_data, execution_date=20220608T000000, start_date=20220725T125557, end_date=20220725T125600
[2022-07-25 12:56:00,664] {standard_task_runner.py:97} ERROR - Failed to execute job 227 for task get_***_data (Object of type datetime is not JSON serializable; 2070)
[2022-07-25 12:56:00,801] {local_task_job.py:156} INFO - Task exited with return code 1
[2022-07-25 12:56:01,064] {local_task_job.py:273} INFO - 0 downstream tasks scheduled from follow-on schedule check
